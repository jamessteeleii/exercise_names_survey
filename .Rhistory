names_from = question_wording,
values_from = response,
unused_fn = max) |>
filter(Q16 == "Green",
Q5 == "YES")
View(data_long)
data <- data_long |>
mutate(question_wording = case_when(
question_wording == "What do you personally call this exercise? If you are unsure or do not recognise the exercise, what is your best guess as to what this exercise is called? Type your answer in the space below."
~ "response_name",
question_wording == "Do you recognise this exercise?"
~ "recognise"
)) |>
pivot_wider(id_cols = c(ResponseId,book_exercise_name),
names_from = question_wording,
values_from = response,
unused_fn = max) |>
filter(Q16 == "Green",
Q5 == "Yes")
data <- data_long |>
mutate(question_wording = case_when(
question_wording == "What do you personally call this exercise? If you are unsure or do not recognise the exercise, what is your best guess as to what this exercise is called? Type your answer in the space below."
~ "response_name",
question_wording == "Do you recognise this exercise?"
~ "recognise"
)) |>
pivot_wider(id_cols = c(ResponseId,book_exercise_name),
names_from = question_wording,
values_from = response,
unused_fn = max) |>
filter(Q16 == "Green")
unique(data_long$ResponseId)
length(unique(data_long$ResponseId))
data <- data_long |>
mutate(question_wording = case_when(
question_wording == "What do you personally call this exercise? If you are unsure or do not recognise the exercise, what is your best guess as to what this exercise is called? Type your answer in the space below."
~ "response_name",
question_wording == "Do you recognise this exercise?"
~ "recognise"
)) |>
pivot_wider(id_cols = c(ResponseId,book_exercise_name),
names_from = question_wording,
values_from = response,
unused_fn = max) |>
filter(Q16 == "Green",
Q5 == "Yes")
length(unique(data_long$ResponseId))
length(unique(data$ResponseId))
data <- data_long |>
mutate(question_wording = case_when(
question_wording == "What do you personally call this exercise? If you are unsure or do not recognise the exercise, what is your best guess as to what this exercise is called? Type your answer in the space below."
~ "response_name",
question_wording == "Do you recognise this exercise?"
~ "recognise"
)) |>
pivot_wider(id_cols = c(ResponseId,book_exercise_name),
names_from = question_wording,
values_from = response,
unused_fn = max) |>
filter(Q16 == "Green")
length(unique(data$ResponseId))
data <- data_long |>
mutate(question_wording = case_when(
question_wording == "What do you personally call this exercise? If you are unsure or do not recognise the exercise, what is your best guess as to what this exercise is called? Type your answer in the space below."
~ "response_name",
question_wording == "Do you recognise this exercise?"
~ "recognise"
)) |>
pivot_wider(id_cols = c(ResponseId,book_exercise_name),
names_from = question_wording,
values_from = response,
unused_fn = max) |>
filter(Q16 == "Green",
Q5 == "Yes")
# Let's create tokens
data("stop_words")
data_tokens <- data |>
select(ResponseId, book_exercise_name,
body_position, body_part, action, equipment, equipment_position, action_direction, misc,
recognise, response_name) |>
unnest_tokens(word, response_name) |>
anti_join(stop_words) |>
filter(!is.na(word) & !is.na(recognise)) %>%
mutate(recognise = factor(recognise, levels= c("YES", "NO")))
# spelling errors - https://books.psychstat.org/textmining/data.html
library(hunspell)
words <- unique(data_tokens$word)
bad_words <- hunspell(words)
bad_words <- unique(unlist(bad_words))
suggest_words <- hunspell_suggest(bad_words)
suggest_words <- unlist(lapply(suggest_words, function(x) x[1]))
library(stringi)
bad.whole.words <- paste0("\\b", bad_words, "\\b")
data_tokens$word_check <- stri_replace_all_regex(data_tokens$word, bad.whole.words, suggest_words,
vectorize_all = FALSE)
exercise_words <- data_tokens |>
filter(recognise == "YES") |>
count(book_exercise_name, word, sort = TRUE)
total_words <- exercise_words |>
group_by(book_exercise_name) |>
summarize(total = sum(n))
exercise_words <- left_join(exercise_words, total_words)
ggplot(exercise_words, aes(n/total)) +
geom_histogram(show.legend = FALSE) +
facet_wrap("book_exercise_name", scales = "free") +
scale_y_continuous(trans = scales::pseudo_log_trans()) +
theme_bw()
ggsave("term_frequency_exercise.png", width = 10, height = 5, dpi = 300)
freq_by_rank <- exercise_words |>
group_by(book_exercise_name) |>
mutate(rank = row_number(),
tf = n/total,
log10_rank = log10(rank),
log10_tf = log10(tf)) |>
ungroup()
lm <- lm(log10_tf ~ log10_rank * book_exercise_name, data = freq_by_rank)
zipf_preds <- predictions(lm,
variables = list(book_exercise_name = unique(freq_by_rank$book_exercise_name)))
freq_by_rank |>
ggplot() +
geom_line(aes(x=rank, y=tf),
size = 1.1, alpha = 0.8, show.legend = FALSE) +
geom_ribbon(data = zipf_preds,
aes(x=10^log10_rank, ymin=10^conf.low, ymax=10^conf.high),
alpha = 0.25) +
geom_line(data = zipf_preds,
aes(x=10^log10_rank, y=10^estimate),
linetype = "dashed") +
labs(x = "Term Frequency (proprtion on log10 scale)",
y = "Term Rank (log10 scale)") +
facet_wrap("book_exercise_name") +
scale_x_log10() +
scale_y_log10() +
theme_bw()
# inverse exercise (person) frequency
tf_ief <- exercise_words |>
bind_tf_idf(word, book_exercise_name, n)
tf_ief |>
select(-total) |>
arrange(desc(tf_idf))
library(forcats)
tf_ief |>
group_by(book_exercise_name) |>
slice_max(tf_idf, n = 15) |>
ungroup() |>
ggplot(aes(tf_idf, fct_reorder(word, tf_idf), group = book_exercise_name)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book_exercise_name, scales = "free") +
labs(x = "tf-ief", y = NULL) +
theme_bw()
tf_ief |>
group_by(book_exercise_name) |>
slice_max(tf_idf, n = 15) |>
# ungroup() |>
ggplot(aes(tf_idf, fct_reorder(word, tf_idf), group = book_exercise_name)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book_exercise_name, scales = "free") +
labs(x = "tf-ief", y = NULL) +
theme_bw()
tf_ief |>
group_by(book_exercise_name) |>
slice_max(tf_idf, n = 15) |>
# ungroup() |>
ggplot(aes(tf_idf, fct_reorder(word, tf_idf), group = book_exercise_name)) +
geom_col(show.legend = FALSE) +
facet_wrap("book_exercise_name", scales = "free") +
labs(x = "tf-ief", y = NULL) +
theme_bw()
tf_ief |>
group_by(book_exercise_name) |>
slice_max(tf_idf, n = 50) |>
# ungroup() |>
ggplot(aes(tf_idf, fct_reorder(word, tf_idf), group = book_exercise_name)) +
geom_col(show.legend = FALSE) +
facet_wrap("book_exercise_name", scales = "free") +
labs(x = "tf-ief", y = NULL) +
theme_bw()
tf_ief |>
group_by(book_exercise_name) |>
slice_max(tf_idf, n = 10) |>
# ungroup() |>
ggplot(aes(tf_idf, fct_reorder(word, tf_idf), group = book_exercise_name)) +
geom_col(show.legend = FALSE) +
facet_wrap("book_exercise_name", scales = "free") +
labs(x = "tf-ief", y = NULL) +
theme_bw()
?fct_reorder
tf_ief |>
group_by(book_exercise_name) |>
slice_max(tf_idf, n = 10) |>
# ungroup() |>
ggplot(aes(tf_idf, fct_reorder(word, tf_idf), fill = book_exercise_name)) +
geom_col(show.legend = FALSE) +
facet_wrap("book_exercise_name", scales = "free") +
labs(x = "tf-ief", y = NULL) +
theme_bw()
tf_ief |>
group_by(book_exercise_name) |>
slice_max(tf_idf, n = 10) |>
# ungroup() |>
ggplot(aes(tf_idf, word, fill = book_exercise_name)) +
geom_col(show.legend = FALSE) +
facet_wrap("book_exercise_name", scales = "free") +
labs(x = "tf-ief", y = NULL) +
scale_x_reordered() +
theme_bw()
tf_ief |>
mutate(word = reorder_within(word, tf_idf, book_exercise_name)) +
group_by(book_exercise_name) |>
slice_max(tf_idf, n = 10) |>
# ungroup() |>
ggplot(aes(tf_idf, word, fill = book_exercise_name)) +
geom_col(show.legend = FALSE) +
facet_wrap("book_exercise_name", scales = "free") +
labs(x = "tf-ief", y = NULL) +
theme_bw()
tf_ief
tf_ief |>
mutate(word = reorder_within(word, tf_idf, book_exercise_name))
tf_ief |>
mutate(word = reorder_within(word, tf_idf, book_exercise_name)) +
group_by(book_exercise_name) |>
slice_max(tf_idf, n = 10) |>
# ungroup() |>
ggplot(aes(tf_idf, word)) +
geom_col(show.legend = FALSE) +
facet_wrap("book_exercise_name", scales = "free") +
labs(x = "tf-ief", y = NULL) +
theme_bw()
tf_ief |>
mutate(word = reorder_within(word, tf_idf, book_exercise_name)) +
# group_by(book_exercise_name) |>
slice_max(tf_idf, n = 10) |>
# ungroup() |>
ggplot(aes(tf_idf, word)) +
geom_col(show.legend = FALSE) +
facet_wrap("book_exercise_name", scales = "free") +
labs(x = "tf-ief", y = NULL) +
theme_bw()
tf_ief |>
mutate(word = reorder_within(word, tf_idf, book_exercise_name)) |>
group_by(book_exercise_name) |>
slice_max(tf_idf, n = 10) |>
# ungroup() |>
ggplot(aes(tf_idf, word)) +
geom_col(show.legend = FALSE) +
facet_wrap("book_exercise_name", scales = "free") +
labs(x = "tf-ief", y = NULL) +
theme_bw()
glimpse(tf_ief)
tf_ief |>
mutate(word = factor(word)) |>
group_by(book_exercise_name) |>
slice_max(tf_idf, n = 10) |>
# ungroup() |>
ggplot(aes(tf_idf, fct_reorder(word, tf_idf))) +
geom_col(show.legend = FALSE) +
facet_wrap("book_exercise_name", scales = "free") +
labs(x = "tf-ief", y = NULL) +
theme_bw()
tf_ief |>
group_by(book_exercise_name) |>
slice_max(tf_idf, n = 10) |>
ungroup() |>
mutate(book_exercise_name = as.factor(book_exercise_name),
word = reorder_within(word, tf_idf, book_exercise_name)) |>
ggplot(aes(tf_idf, word)) +
geom_col(show.legend = FALSE) +
facet_wrap("book_exercise_name", scales = "free") +
labs(x = "tf-ief", y = NULL) +
theme_bw()
tf_ief |>
group_by(book_exercise_name) |>
slice_max(tf_idf, n = 10) |>
ungroup() |>
mutate(book_exercise_name = as.factor(book_exercise_name),
word = reorder_within(word, tf_idf, book_exercise_name)) |>
ggplot(aes(tf_idf, word)) +
geom_col(show.legend = FALSE) +
facet_wrap("book_exercise_name", scales = "free") +
labs(x = "tf-ief", y = NULL) +
scale_x_reordered()
tf_ief |>
group_by(book_exercise_name) |>
slice_max(tf_idf, n = 10) |>
ungroup() |>
mutate(word = reorder_within(word, tf_idf, as.factor(book_exercise_name))) |>
ggplot(aes(tf_idf, word)) +
geom_col(show.legend = FALSE) +
facet_wrap("book_exercise_name", scales = "free") +
labs(x = "tf-ief", y = NULL) +
scale_x_reordered() +
theme_bw()
tf_ief |>
group_by(book_exercise_name) |>
slice_max(tf_idf, n = 10) |>
ungroup() |>
mutate(word = reorder_within(word, tf_idf, as.factor(book_exercise_name))) |>
ggplot(aes(tf_idf, word)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book_exercise_name, scales = "free") +
labs(x = "tf-ief", y = NULL) +
scale_x_reordered() +
theme_bw()
check <- tf_ief |>
group_by(book_exercise_name) |>
slice_max(tf_idf, n = 10) |>
ungroup() |>
mutate(word = reorder_within(word, tf_idf, as.factor(book_exercise_name)))
View(check)
check <- tf_ief |>
group_by(book_exercise_name) |>
slice_max(tf_idf, n = 10) |>
ungroup() |>
mutate(word = reorder_within(word, tf_idf, as.factor(book_exercise_name))) |>
separate(word)
check <- tf_ief |>
group_by(book_exercise_name) |>
slice_max(tf_idf, n = 10) |>
ungroup() |>
mutate(word = reorder_within(word, tf_idf, as.factor(book_exercise_name))) |>
separate(word, into = c("word", "lab"))
View(check)
check <- tf_ief |>
group_by(book_exercise_name) |>
top_n(10) |>
ungroup() |>
mutate(word = reorder_within(word, tf_idf, as.factor(book_exercise_name))) |>
separate(word, into = c("word", "lab"))
tf_ief |>
group_by(book_exercise_name) |>
slice_max(tf_idf, n = 10) |>
ungroup() |>
mutate(word = reorder_within(word, tf_idf, as.factor(book_exercise_name))) |>
separate(word, into = c("word", "lab")) |>
ggplot(aes(tf_idf, word)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book_exercise_name, scales = "free") +
labs(x = "tf-ief", y = NULL) +
scale_x_reordered() +
theme_bw()
View(check)
check <- tf_ief |>
group_by(book_exercise_name) |>
slice_max(tf_idf, n = 10) |>
ungroup() |>
mutate(word = reorder_within(word, tf_idf, as.factor(book_exercise_name))) |>
separate(word, into = c("word", "lab")) |>
ggplot(aes(tf_idf, word)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book_exercise_name, scales = "free") +
labs(x = "tf-ief", y = NULL) +
# scale_x_reordered() +
theme_bw()
check <- tf_ief |>
group_by(book_exercise_name) |>
slice_max(tf_idf, n = 10) |>
ungroup() |>
mutate(word = reorder_within(word, tf_idf, as.factor(book_exercise_name))) |>
separate(word, into = c("word", "lab")) |>
ggplot(aes(tf_idf, word)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book_exercise_name, scales = "free") +
labs(x = "tf-ief", y = NULL) +
# scale_x_reordered() +
theme_bw()
tf_ief |>
group_by(book_exercise_name) |>
slice_max(tf_idf, n = 10) |>
ungroup() |>
mutate(word = reorder_within(word, tf_idf, as.factor(book_exercise_name))) |>
separate(word, into = c("word", "lab")) |>
ggplot(aes(tf_idf, word)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book_exercise_name, scales = "free") +
labs(x = "tf-ief", y = NULL) +
# scale_x_reordered() +
theme_bw()
tf_ief |>
group_by(book_exercise_name) |>
slice_max(tf_idf, n = 10) |>
ungroup() |>
mutate(book_exercise_name = as.factor(book_exercise_name),
word = reorder_within(word, tf_idf, book_exercise_name)) |>
separate(word, into = c("word", "lab")) |>
ggplot(aes(tf_idf, word)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book_exercise_name, scales = "free") +
labs(x = "tf-ief", y = NULL) +
# scale_x_reordered() +
theme_bw()
?reorder_within()
tf_ief |>
group_by(book_exercise_name) |>
slice_max(tf_idf, n = 10) |>
ungroup() |>
mutate(book_exercise_name = as.factor(book_exercise_name),
word = reorder_within(word, tf_idf, book_exercise_name)) |>
separate(word, into = c("word", "lab")) |>
ggplot(aes(tf_idf, word, group=book_exercise_name)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book_exercise_name, scales = "free") +
labs(x = "tf-ief", y = NULL) +
# scale_x_reordered() +
theme_bw()
tf_ief |>
group_by(book_exercise_name) |>
slice_max(tf_idf, n = 10) |>
ungroup() |>
mutate(book_exercise_name = as.factor(book_exercise_name),
word = reorder_within(word, tf_idf, book_exercise_name)) |>
separate(word, into = c("word", "lab")) |>
ggplot(aes(tf_idf, word, group=book_exercise_name)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book_exercise_name, scales = "free") +
labs(x = "tf-ief", y = NULL) +
scale_x_reordered() +
theme_bw()
tf_ief
# inverse exercise (person) frequency
tf_ief <- exercise_words |>
bind_tf_idf(word, book_exercise_name, n)
tf_ief
tf_ief %>%
group_by(book_exercise_name) %>%
slice_max(tf_idf, n = 10) %>%
ungroup() %>%
mutate(book_exercise_name = as.factor(book_exercise_name),
word = reorder_within(word, tf_idf, book_exercise_name)) %>%
separate(word, into = c("word", "lab")) %>%
ggplot(aes(tf_idf, word, group=book_exercise_name)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book_exercise_name, scales = "free") +
labs(x = "tf-ief", y = NULL) +
scale_x_reordered() +
theme_bw()
check <- tf_ief |>
group_by(book_exercise_name) |>
slice_max(tf_idf, n = 10)
check <- tf_ief |>
group_by(book_exercise_name) |>
slice_max(tf_idf, n = 10) |>
ungroup() |>
mutate(book_exercise_name = as.factor(book_exercise_name),
word = reorder_within(word, tf_idf, book_exercise_name))
check <- tf_ief |>
group_by(book_exercise_name) |>
slice_max(tf_idf, n = 10) |>
ungroup() |>
mutate(book_exercise_name = as.factor(book_exercise_name),
word = reorder_within(word, tf_idf, book_exercise_name)) |>
separate(word, into = c("word", "lab"))
tf_ief |>
group_by(book_exercise_name) |>
slice_max(tf_idf, n = 10) |>
ungroup() |>
mutate(book_exercise_name = as.factor(book_exercise_name),
word = reorder_within(word, tf_idf, book_exercise_name)) |>
separate(word, into = c("word", "lab")) |>
ggplot(aes(tf_idf, word, group=book_exercise_name)) +
geom_col(show.legend = FALSE)
tf_ief |>
group_by(book_exercise_name) |>
slice_max(tf_idf, n = 10) |>
ungroup() |>
mutate(book_exercise_name = as.factor(book_exercise_name),
word = reorder_within(word, tf_idf, book_exercise_name)) |>
separate(word, into = c("word", "lab")) |>
ggplot(aes(tf_idf, word, group=book_exercise_name)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book_exercise_name, scales = "free")
check <- tf_ief |>
group_by(book_exercise_name) |>
slice_max(tf_idf, n = 10) |>
ungroup() |>
mutate(book_exercise_name = as.factor(book_exercise_name),
word = reorder_within(word, tf_idf, book_exercise_name)) |>
separate(word, into = c("word", "lab")) |>
ggplot(aes(tf_idf, word, group=book_exercise_name)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book_exercise_name, scales = "free") +
labs(x = "tf-ief", y = NULL) +
scale_y_reordered() +
theme_bw()
tf_ief |>
group_by(book_exercise_name) |>
slice_max(tf_idf, n = 10) |>
ungroup() |>
mutate(book_exercise_name = as.factor(book_exercise_name),
word = reorder_within(word, tf_idf, book_exercise_name)) |>
separate(word, into = c("word", "lab")) |>
ggplot(aes(tf_idf, word, group=book_exercise_name)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book_exercise_name, scales = "free") +
labs(x = "tf-ief", y = NULL) +
scale_y_reordered() +
theme_bw()
check <- tf_ief |>
group_by(book_exercise_name) |>
slice_max(tf_idf, n = 10) |>
ungroup() |>
mutate(book_exercise_name = as.factor(book_exercise_name),
word = reorder_within(word, tf_idf, book_exercise_name)) |>
separate(word, into = c("word", "lab")) |>
ggplot(aes(word, tf_idf, group=book_exercise_name)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book_exercise_name, scales = "free") +
labs(x = "tf-ief", y = NULL) +
coord_flip() +
scale_x_reordered() +
theme_bw()
check
