"I sometimes call the same exercise by different names" = Q68_4,
"A system that standardizes exercise names would be beneficial" = Q68_5
) |>
mutate(across(everything(), ~ factor(.x, levels = c(
"Strongly disagree",
"Disagree",
"Neutral",
"Agree",
"Strongly agree"
)))) |>
ggstats::gglikert() +
scale_y_discrete(labels = function(x) str_wrap(x, width = 25))
?ggstats::gglikert()
data |>
group_by(ResponseId) |>
slice_head(n=1) |>
ungroup() |>
select(Q68_1,Q68_2,Q68_3,Q68_4,Q68_5) |>
rename(
"Exercise names are important" = Q68_1,
"Exercises are named inconsistently" =  Q68_2,
"Exercise names impact how information about exercise is learned" = Q68_3,
"I sometimes call the same exercise by different names" = Q68_4,
"A system that standardizes exercise names would be beneficial" = Q68_5
) |>
mutate(across(everything(), ~ factor(.x, levels = c(
"Strongly disagree",
"Disagree",
"Neutral",
"Agree",
"Strongly agree"
)))) |>
ggstats::gglikert(add_totals = TRUE) +
scale_y_discrete(labels = function(x) str_wrap(x, width = 25))
data |>
group_by(ResponseId) |>
slice_head(n=1) |>
ungroup() |>
select(Q68_1,Q68_2,Q68_3,Q68_4,Q68_5) |>
rename(
"Exercise names are important" = Q68_1,
"Exercises are named inconsistently" =  Q68_2,
"Exercise names impact how information about exercise is learned" = Q68_3,
"I sometimes call the same exercise by different names" = Q68_4,
"A system that standardizes exercise names would be beneficial" = Q68_5
) |>
mutate(across(everything(), ~ factor(.x, levels = c(
"Strongly disagree",
"Disagree",
"Neutral",
"Agree",
"Strongly agree"
)))) |>
ggstats::gglikert(totals_accuracy = TRUE) +
scale_y_discrete(labels = function(x) str_wrap(x, width = 25))
body_position_words <- tokens |>
filter(recognise == "YES") |>
count(body_position, word, sort = TRUE)
# inverse exercise frequency for recognised exercises
tf_ibpf <- body_position_words |>
bind_tf_idf(word, body_position, n)
tf_ibpf_plot <- tf_ibpf |>
group_by(body_position) |>
top_n(5) |>
ggplot(aes(
x = tf_idf,
y = reorder_within(word, tf_idf, body_position)
)) +
geom_col(show.legend = FALSE) +
labs(
x = "Term Frequency - Inverse Body Position Frequency",
y = NULL,
title = "Top five words by term frequency - inverse body position frequency",
subtitle = "Measure of how important a word is for naming an exercise based on body position in the collection of exercises examined"
) +
scale_y_reordered() +
facet_wrap( ~ body_position, scales = "free") +
theme_bw()
tf_ibpf
tf_ibpf_plot
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_make()
install.packages("grateful")
renv::status()
renv::snapshot()
targets::tar_make()
targets::tar_make()
targets::tar_make()
cite_packages(out.dir = ".", cite.tidyverse = TRUE, out.format = "pdf")
grateful::cite_packages(out.dir = ".", cite.tidyverse = TRUE, out.format = "pdf")
targets::tar_visnetwork()
?tidytext::bind_tf_idf()
targets::tar_load(demographics_tbl)
View(demographics_tbl)
summary_tbl <- demographics_tbl |>
gtsummary::tbl_summary(type = c(`Typical resistance training frequency (days)`) ~ "continuous",
missing = "no")
summary_tbl
summary_tbl <- as.data.frame(summary_tbl$table_body) %>%
mutate(Characteristic = label,
Summary = stat_0) %>%
select(Characteristic, Summary) %>%
filter(Characteristic != "Unknown")
library(tidyverse)
summary_tbl <- as.data.frame(summary_tbl$table_body) |>
mutate(Characteristic = label,
Summary = stat_0) |>
select(Characteristic, Summary) |>
filter(Characteristic != "Unknown")
tinytable::tt(as.data.frame(summary_tbl$table_body))
summary_tbl
tinytable::tt(summary_tbl)
summary_tbl
install.packages("kableExtra")
summary_tbl <- demographics_tbl |>
gtsummary::tbl_summary(type = c(`Typical resistance training frequency (days)`) ~ "continuous",
missing = "no")
library(gtsummary)
library(kableExtra)
as_kable_extra(summary_tbl, format = "latex")
targets::tar_load(count_freqs_plot)
targets::tar_load(count_freqs_plot)
count_freqs_plot
targets::tar_load(counts_freqs_plot)
#| message: false
#| warning: false
#| echo: false
targets::tar_load(demographics_tbl)
summary_tbl <- demographics_tbl |>
tbl_summary(type = c(`Typical resistance training frequency (days)`) ~ "continuous",
missing = "no")
# summary_tbl <- as.data.frame(summary_tbl$table_body) |>
#   mutate(Characteristic = label,
#          Summary = stat_0) |>
#   select(Characteristic, Summary) |>
#   filter(Characteristic != "Unknown")
as_kable_extra(summary_tbl, format = "latex")
#| message: false
#| warning: false
#| echo: false
#| label: fig-all-freq-plot
#| fig-width: 15
#| fig-height: 5
#| fig-cap: Counts, term frequencies, and relationship between term frequency and rank for all words used.
targets::tar_load(counts_freqs_plot)
counts_freqs_plot
summary_tbl <- as.data.frame(summary_tbl$table_body) |>
mutate(Characteristic = label,
Summary = stat_0) |>
select(Characteristic, Summary) |>
filter(Characteristic != "Unknown")
summary_tbl
summary_tbl |>
kbl()
summary_tbl
kable(summary_tbl)
kbl(summary_tbl)
as.data.frame(summary_tbl$table_body) |>
mutate(Characteristic = label,
Summary = stat_0) |>
select(Characteristic, Summary) |>
filter(Characteristic != "Unknown") |>
filter(!row_number() %in% c(1))
targets::tar_load(demographics_tbl)
demographics_tbl <- demographics_tbl |>
tbl_summary(type = c(`Typical resistance training frequency (days)`) ~ "continuous",
missing = "no")
demographics_tbl <- demographics_tbl |>
tbl_summary(type = c(`Typical resistance training frequency (days)`) ~ "continuous",
missing = "no")
targets::tar_load(demographics_tbl)
demographics_tbl <- demographics_tbl |>
tbl_summary(type = c(`Typical resistance training frequency (days)`) ~ "continuous",
missing = "no")
as.data.frame(demographics_tbl$table_body) |>
mutate(Characteristic = label,
Summary = stat_0) |>
select(Characteristic, Summary) |>
filter(Characteristic != "Unknown") |>
filter(!row_number() %in% c(1))
kbl(summary_tbl) |>
pack_rows("Biological sex", 1, 2)
as.data.frame(demographics_tbl$table_body) |>
mutate(Characteristic = label,
Summary = stat_0) |>
select(Characteristic, Summary) |>
filter(Characteristic != "Unknown") |>
filter(!row_number(1) )
as.data.frame(demographics_tbl$table_body) |>
mutate(Characteristic = label,
Summary = stat_0) |>
select(Characteristic, Summary) |>
filter(Characteristic != "Unknown") |>
filter(row_number(1) )
as.data.frame(demographics_tbl$table_body) |>
mutate(Characteristic = label,
Summary = stat_0) |>
select(Characteristic, Summary) |>
filter(Characteristic != "Unknown") |>
filter(!row_number() %in% c(1, 2, 3))
as.data.frame(demographics_tbl$table_body) |>
mutate(Characteristic = label,
Summary = stat_0) |>
select(Characteristic, Summary) |>
filter(Characteristic != "Unknown")
as.data.frame(demographics_tbl$table_body) |>
mutate(Characteristic = label,
Summary = stat_0) |>
select(Characteristic, Summary) |>
filter(Characteristic != "Unknown") |>
filter(!row_number() %in% c(1, 5))
as.data.frame(demographics_tbl$table_body) |>
mutate(Characteristic = label,
Summary = stat_0) |>
select(Characteristic, Summary) |>
filter(Characteristic != "Unknown")
as.data.frame(demographics_tbl$table_body) |>
mutate(Characteristic = label,
Summary = stat_0) |>
select(Characteristic, Summary) |>
filter(Characteristic != "Unknown") |>
filter(!row_number() %in% c(1, 5))
demographics_tbl
demographics_tbl
kbl(summary_tbl) |>
pack_rows("Biological sex", 1, 2) |>
pack_rows("Highest level of education", 4, 9)
summary_tbl <- as.data.frame(demographics_tbl$table_body) |>
mutate(Characteristic = label,
Summary = stat_0) |>
select(Characteristic, Summary) |>
filter(Characteristic != "Unknown") |>
filter(!row_number() %in% c(1, 5))
kbl(summary_tbl) |>
pack_rows("Biological sex", 1, 2) |>
pack_rows("Highest level of education", 4, 9)
kable(summary_tbl) |>
pack_rows("Biological sex", 1, 2) |>
pack_rows("Highest level of education", 4, 9)
kable(summary_tbl) |>
pack_rows("Biological sex", 1, 2) |>
pack_rows("Highest level of education", 4, 9) |>
kable_classic(full_width = FALSE)
View(summary_tbl)
summary_tbl <- as.data.frame(demographics_tbl$table_body) |>
mutate(Characteristic = label,
Summary = stat_0) |>
select(Characteristic, Summary) |>
filter(Characteristic != "Unknown") |>
filter(!row_number() %in% c(1, 5, 21))
kable(summary_tbl) |>
pack_rows("Biological sex", 1, 2) |>
pack_rows("Highest level of education", 4, 9) |>
pack_rows("Current or most recent job role", 22, 31) |>
footnote(
general = "Count data presented as n (%); continous data presented as median (Q1, Q3)"
) |>
kable_classic(full_width = FALSE)
kable(summary_tbl) |>
pack_rows("Biological sex", 1, 2) |>
pack_rows("Highest level of education", 4, 9) |>
pack_rows("Current or most recent job role", 22, 31) |>
footnote(
general = "Count data presented as n (%); continous data presented as median (Q1, Q3)"
)
kable(summary_tbl) |>
pack_rows("Biological sex", 1, 2) |>
pack_rows("Highest level of education", 4, 9) |>
pack_rows("Current or most recent job role", 22, 31) |>
row_spec(3, bold = TRUE) |>
footnote(
general = "Count data presented as n (%); continous data presented as median (Q1, Q3)"
) |>
kable_classic(full_width = FALSE)
kable(summary_tbl) |>
pack_rows("Biological sex", 1, 2) |>
pack_rows("Highest level of education", 4, 9) |>
pack_rows("Current or most recent job role", 22, 31) |>
row_spec(3, bold = TRUE) |>
col_spec(2, bold = FALSE) |>
footnote(
general = "Count data presented as n (%); continous data presented as median (Q1, Q3)"
) |>
kable_classic(full_width = FALSE)
kable(summary_tbl) |>
pack_rows("Biological sex", 1, 2) |>
pack_rows("Highest level of education", 4, 9) |>
pack_rows("Current or most recent job role", 22, 31) |>
row_spec(3, bold = TRUE) |>
column_spec(2, bold = FALSE) |>
footnote(
general = "Count data presented as n (%); continous data presented as median (Q1, Q3)"
) |>
kable_classic(full_width = FALSE)
summary_tbl <- as.data.frame(demographics_tbl$table_body) |>
mutate(Characteristic = label,
Summary = stat_0) |>
select(Characteristic, Summary) |>
filter(Characteristic != "Unknown") |>
filter(!row_number() %in% c(1, 5, 20))
kable(summary_tbl) |>
pack_rows("Biological sex", 1, 2) |>
pack_rows("Highest level of education", 4, 9) |>
pack_rows("Current or most recent job role", 22, 31) |>
row_spec(3, bold = TRUE) |>
column_spec(2, bold = FALSE) |>
footnote(
general = "Count data presented as n (%); continous data presented as median (Q1, Q3)"
) |>
kable_classic(full_width = FALSE)
kable(summary_tbl) |>
pack_rows("Biological sex", 1, 2) |>
pack_rows("Highest level of education", 4, 9) |>
pack_rows("Current or most recent job role", 20, 31) |>
row_spec(3, bold = TRUE) |>
column_spec(2, bold = FALSE) |>
footnote(
general = "Count data presented as n (%); continous data presented as median (Q1, Q3)"
) |>
kable_classic(full_width = FALSE)
as.data.frame(demographics_tbl$table_body) |>
mutate(Characteristic = label,
Summary = stat_0) |>
select(Characteristic, Summary) |>
filter(Characteristic != "Unknown") |>
filter(!row_number() %in% c(1, 5, 20))
summary_tbl <- as.data.frame(demographics_tbl$table_body) |>
mutate(Characteristic = label,
Summary = stat_0) |>
select(Characteristic, Summary) |>
filter(Characteristic != "Unknown")
summary_tbl <- as.data.frame(demographics_tbl$table_body) |>
mutate(Characteristic = label,
Summary = stat_0) |>
select(Characteristic, Summary) |>
filter(Characteristic != "Unknown") |>
filter(!row_number() %in% c(1, 5, 23))
kable(summary_tbl) |>
pack_rows("Biological sex", 1, 2) |>
pack_rows("Highest level of education", 4, 9) |>
pack_rows("Current or most recent job role", 21, 31) |>
row_spec(3, bold = TRUE) |>
column_spec(2, bold = FALSE) |>
footnote(
general = "Count data presented as n (%); continous data presented as median (Q1, Q3)"
) |>
kable_classic(full_width = FALSE)
kable(summary_tbl) |>
pack_rows("Biological sex", 1, 2) |>
pack_rows("Highest level of education", 4, 9) |>
pack_rows("Current or most recent job role", 21, 31) |>
row_spec(c(3, 10:20), bold = TRUE) |>
column_spec(2, bold = FALSE) |>
footnote(
general = "Count data presented as n (%); continous data presented as median (Q1, Q3)"
) |>
kable_classic(full_width = FALSE)
?column_spec
?pack_rows
kable(summary_tbl) |>
pack_rows("Biological sex", 1, 2) |>
pack_rows("Highest level of education", 4, 9, bold = FALSE) |>
pack_rows("Current or most recent job role", 21, 31, bold = FALSE) |>
# row_spec(c(3, 10:20), bold = TRUE) |>
# column_spec(2, bold = FALSE) |>
footnote(
general = "Count data presented as n (%); continous data presented as median (Q1, Q3)"
) |>
kable_classic(full_width = FALSE)
kable(summary_tbl) |>
pack_rows("Biological sex", 1, 2, bold = FALSE) |>
pack_rows("Highest level of education", 4, 9, bold = FALSE) |>
pack_rows("Current or most recent job role", 21, 31, bold = FALSE) |>
# row_spec(c(3, 10:20), bold = TRUE) |>
# column_spec(2, bold = FALSE) |>
footnote(
general = "Count data presented as n (%); continous data presented as median (Q1, Q3)"
) |>
kable_classic(full_width = FALSE)
kable(summary_tbl) |>
pack_rows("Biological sex", 1, 2, bold = FALSE, hline_after = FALSE) |>
pack_rows("Highest level of education", 4, 9, bold = FALSE) |>
pack_rows("Current or most recent job role", 21, 31, bold = FALSE) |>
# row_spec(c(3, 10:20), bold = TRUE) |>
# column_spec(2, bold = FALSE) |>
footnote(
general = "Count data presented as n (%); continous data presented as median (Q1, Q3)"
) |>
kable_classic(full_width = FALSE)
kable(summary_tbl) |>
pack_rows("Biological sex", 1, 2, bold = FALSE, hline_before = FALSE) |>
pack_rows("Highest level of education", 4, 9, bold = FALSE) |>
pack_rows("Current or most recent job role", 21, 31, bold = FALSE) |>
# row_spec(c(3, 10:20), bold = TRUE) |>
# column_spec(2, bold = FALSE) |>
footnote(
general = "Count data presented as n (%); continous data presented as median (Q1, Q3)"
) |>
kable_classic(full_width = FALSE)
kable(summary_tbl) |>
pack_rows("Biological sex", 1, 2, bold = FALSE, hline_before = TRUE) |>
pack_rows("Highest level of education", 4, 9, bold = FALSE) |>
pack_rows("Current or most recent job role", 21, 31, bold = FALSE) |>
# row_spec(c(3, 10:20), bold = TRUE) |>
# column_spec(2, bold = FALSE) |>
footnote(
general = "Count data presented as n (%); continous data presented as median (Q1, Q3)"
) |>
kable_classic(full_width = FALSE)
targets::tar_load(data)
View(data)
data |>
group_by(ResponseId) |>
slice_head(n=1) |>
ungroup() |>
group_by(survey) |>
count(
data |>
group_by(ResponseId) |>
slice_head(n=1) |>
ungroup() |>
group_by(survey) |>
count()
data |>
data |>
group_by(ResponseId) |>
slice_head(n=1) |>
ungroup() |>
group_by(survey) |>
count()
sample_sizes <- data |>
group_by(ResponseId) |>
slice_head(n=1) |>
ungroup() |>
group_by(survey) |>
count()
sum(sample_sizes$n)
sample_sizes
sample_sizes$n[3]
targets::tar_load(freqs_recognise_plot)
targets::tar_load(freqs_recognise_plot)
freqs_recognise_plot
targets::tar_load(recognise_bigrams_plot)
targets::tar_load(recognise_bigrams_plot)
recognise_bigrams_plot
library(igraph)
library(ggraph)
library(tidygraph)
recognise_bigrams_plot
targets::tar_load(did_not_recognise_bigrams_plot)
?reorder_within
targets::tar_load(exercise_names_likert_plot)
exercise_names_likert_plot
#| message: false
#| warning: false
#| echo: false
#| include: false
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
options(knitr.kable.NA = '')
library(tidyverse)
library(patchwork)
library(gtsummary)
library(kableExtra)
library(igraph)
library(ggraph)
library(tidygraph)
library(tidytext)
targets::tar_load(data)
View(data)
data |>
group_by(book_exercise_name, recognise) |>
# slice_head(n=1) |>
# ungroup() |>
# group_by(survey) |>
count()
data |>
group_by(book_exercise_name, recognise) |>
# slice_head(n=1) |>
# ungroup() |>
# group_by(survey) |>
count() |>
filter(!is.na(recognise))
data |>
group_by(book_exercise_name, recognise) |>
# slice_head(n=1) |>
# ungroup() |>
# group_by(survey) |>
count() |>
filter(!is.na(recognise)) |>
group_by(book_exercise_name) |>
mutate(total = sum(n))
data |>
group_by(book_exercise_name, recognise) |>
# slice_head(n=1) |>
# ungroup() |>
# group_by(survey) |>
count() |>
filter(!is.na(recognise)) |>
group_by(book_exercise_name) |>
mutate(total = sum(n),
prop = n/total)
recognised <- data |>
group_by(book_exercise_name, recognise) |>
count() |>
filter(!is.na(recognise)) |>
group_by(book_exercise_name) |>
mutate(total = sum(n),
prop = n/total) |>
filter(recognise == "YES")
View(recognised)
