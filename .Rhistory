values_to = "populations") |>
mutate(populations = case_when(
populations == " otherwise healthy)" ~ NA,
populations == "General population (non-clinical" ~ "General population (non-clinical, otherwise healthy)",
.default = as.character(populations)
)) |>
filter(!is.na(populations)) |>
fastDummies::dummy_cols("populations")
q14_split
q14_split[c(1,4:7)]
test <- left_join(data, q14_split[c(1,4:7)], by = "ResponseId")
test
View(test)
test <- data |>
group_by(ResponseId) |>
slice_head(n=1) |>
left_join(q14_split[c(1,4:7)], by = "ResponseId")
View(test)
View(q14_split)
q14_split <- data |>
select(ResponseId, Q14) |>
group_by(ResponseId) |>
slice_head(n=1) |>
separate(Q14, into = c("a","b","c","d","e"), sep = ",") |>
pivot_longer(2:6,
names_to = "x",
values_to = "populations") |>
mutate(populations = case_when(
populations == " otherwise healthy)" ~ NA,
populations == "General population (non-clinical" ~ "General population (non-clinical, otherwise healthy)",
.default = as.character(populations)
)) |>
filter(!is.na(populations)) |>
fastDummies::dummy_cols("populations") |>
group_by(ResponseId) |>
summarise(athletes = sum(4))
q14_split <- data |>
select(ResponseId, Q14) |>
group_by(ResponseId) |>
slice_head(n=1) |>
separate(Q14, into = c("a","b","c","d","e"), sep = ",") |>
pivot_longer(2:6,
names_to = "x",
values_to = "populations") |>
mutate(populations = case_when(
populations == " otherwise healthy)" ~ NA,
populations == "General population (non-clinical" ~ "General population (non-clinical, otherwise healthy)",
.default = as.character(populations)
)) |>
filter(!is.na(populations)) |>
fastDummies::dummy_cols("populations")
data |>
select(ResponseId, Q14) |>
group_by(ResponseId) |>
slice_head(n=1) |>
separate(Q14, into = c("a","b","c","d","e"), sep = ",") |>
pivot_longer(2:6,
names_to = "x",
values_to = "populations") |>
mutate(populations = case_when(
populations == " otherwise healthy)" ~ NA,
populations == "General population (non-clinical" ~ "General population (non-clinical, otherwise healthy)",
.default = as.character(populations)
)) |>
filter(!is.na(populations)) |>
fastDummies::dummy_cols("populations") |>
group_by(ResponseId) |>
summarise(athletes = sum(col(4)))
q14_split <- data |>
select(ResponseId, Q14) |>
group_by(ResponseId) |>
slice_head(n=1) |>
separate(Q14, into = c("a","b","c","d","e"), sep = ",") |>
pivot_longer(2:6,
names_to = "x",
values_to = "populations") |>
mutate(populations = case_when(
populations == " otherwise healthy)" ~ NA,
populations == "General population (non-clinical" ~ "General population (non-clinical, otherwise healthy)",
.default = as.character(populations)
)) |>
filter(!is.na(populations)) |>
fastDummies::dummy_cols("populations") |>
group_by(ResponseId) |>
summarise(athletes = sum(.[4]))
q14_split <- data |>
select(ResponseId, Q14) |>
group_by(ResponseId) |>
slice_head(n=1) |>
separate(Q14, into = c("a","b","c","d","e"), sep = ",") |>
pivot_longer(2:6,
names_to = "x",
values_to = "populations") |>
mutate(populations = case_when(
populations == " otherwise healthy)" ~ NA,
populations == "General population (non-clinical" ~ "General population (non-clinical, otherwise healthy)",
.default = as.character(populations)
)) |>
filter(!is.na(populations)) |>
fastDummies::dummy_cols("populations") |>
group_by(ResponseId) |>
summarise(athletes = sum([4]))
q14_split <- data |>
select(ResponseId, Q14) |>
group_by(ResponseId) |>
slice_head(n=1) |>
separate(Q14, into = c("a","b","c","d","e"), sep = ",") |>
pivot_longer(2:6,
names_to = "x",
values_to = "populations")
unique(q14_split$populations)
q14_split <- data |>
select(ResponseId, Q14) |>
group_by(ResponseId) |>
slice_head(n=1) |>
separate(Q14, into = c("a","b","c","d","e"), sep = ",") |>
pivot_longer(2:6,
names_to = "x",
values_to = "populations") |>
mutate(populations = case_when(
populations == " otherwise healthy)" ~ NA,
populations == "General population (non-clinical" ~ "genpop",
populations == "Athletes" ~ "athletes",
populations == "Clinical populations" ~ "clinpop",
populations == "I have never instructed or prescribed the use of this type of exercise for others" ~ "none"
)) |>
filter(!is.na(populations)) |>
fastDummies::dummy_cols("populations")
q14_split <- data |>
select(ResponseId, Q14) |>
group_by(ResponseId) |>
slice_head(n=1) |>
separate(Q14, into = c("a","b","c","d","e"), sep = ",") |>
pivot_longer(2:6,
names_to = "x",
values_to = "populations") |>
mutate(populations = case_when(
populations == " otherwise healthy)" ~ NA,
populations == "General population (non-clinical" ~ "genpop",
populations == "Athletes" ~ "athletes",
populations == "Clinical populations" ~ "clinpop",
populations == "I have never instructed or prescribed the use of this type of exercise for others" ~ "none"
)) |>
filter(!is.na(populations)) |>
fastDummies::dummy_cols("populations") |>
group_by(ResponseId) |>
summarise(athletes = sum(populations_athletes))
q14_split
q14_split <- data |>
select(ResponseId, Q14) |>
group_by(ResponseId) |>
slice_head(n=1) |>
separate(Q14, into = c("a","b","c","d","e"), sep = ",") |>
pivot_longer(2:6,
names_to = "x",
values_to = "populations") |>
mutate(populations = case_when(
populations == " otherwise healthy)" ~ NA,
populations == "General population (non-clinical" ~ "genpop",
populations == "Athletes" ~ "athletes",
populations == "Clinical populations" ~ "clinpop",
populations == "I have never instructed or prescribed the use of this type of exercise for others" ~ "none"
)) |>
filter(!is.na(populations)) |>
fastDummies::dummy_cols("populations") |>
group_by(ResponseId) |>
summarise(athletes = sum(populations_athletes),
genpop = sum(populations_genpop),
clinpop = sum(populations_clinpop),
none = sum(populations_none))
test <- data |>
group_by(ResponseId) |>
slice_head(n=1) |>
left_join(q14_split, by = "ResponseId")
data |>
group_by(ResponseId) |>
slice_head(n=1) |>
left_join(q14_split, by = "ResponseId") |>
ungroup() |>
select(Q2, Q3, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, athletes, genpop, clinpop, none, Q15) |>
mutate(Q8 = as.numeric(case_when(
Q8 == "0 days per week" ~ 0,
Q8 == "1 day per week" ~ 1,
Q8 == "2 days per week" ~ 2,
Q8 == "3 days per week" ~ 3,
Q8 == "4 days per week" ~ 4,
Q8 == "5 days per week" ~ 5,
Q8 == "6 days per week" ~ 6,
Q8 == "7 days per week" ~ 7
))) |>
rename(`Biological sex` = "Q2",
`Age (years)` = "Q3",
`Highest level of education` = "Q6",
`University-level qualification in a field related to exercise, physical activity, or sport?` = "Q7",
`Typical resistance training frequency (days)` = "Q8",
`Resistance training experience (years)` = "Q9",
`Participated in a weightlifting, powerlifting, or strongman competition?` = "Q10",
`Participated in a bodybuilding competition or other physique-based competition?` = "Q11",
`Ever employed in a job involving instruction and/or prescription of resistance training` = "Q12",
`Holds a certification/license qualifying instruction and/or prescription of resistance training` = "Q13",
`Instructed and/or prescribed resistance training for athletes` = "athletes",
`Instructed and/or prescribed resistance training for the general population` = "genpop",
`Instructed and/or prescribed resistance training for clinical populations` = "clinpop",
`Never instructed and/or prescribed resistance training` = "none"
) |>
gtsummary::tbl_summary(type = c(`Typical resistance training frequency (days)`) ~ "continuous",
missing_text = "Missing data")
unique(data$Q15)
data |>
group_by(ResponseId) |>
slice_head(n=1) |>
left_join(q14_split, by = "ResponseId") |>
ungroup() |>
select(Q2, Q3, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, athletes, genpop, clinpop, none, Q15) |>
mutate(Q8 = as.numeric(case_when(
Q8 == "0 days per week" ~ 0,
Q8 == "1 day per week" ~ 1,
Q8 == "2 days per week" ~ 2,
Q8 == "3 days per week" ~ 3,
Q8 == "4 days per week" ~ 4,
Q8 == "5 days per week" ~ 5,
Q8 == "6 days per week" ~ 6,
Q8 == "7 days per week" ~ 7
))) |>
rename(`Biological sex` = "Q2",
`Age (years)` = "Q3",
`Highest level of education` = "Q6",
`University-level qualification in a field related to exercise, physical activity, or sport?` = "Q7",
`Typical resistance training frequency (days)` = "Q8",
`Resistance training experience (years)` = "Q9",
`Participated in a weightlifting, powerlifting, or strongman competition?` = "Q10",
`Participated in a bodybuilding competition or other physique-based competition?` = "Q11",
`Ever employed in a job involving instruction and/or prescription of resistance training` = "Q12",
`Holds a certification/license qualifying instruction and/or prescription of resistance training` = "Q13",
`Instructed and/or prescribed resistance training for athletes` = "athletes",
`Instructed and/or prescribed resistance training for the general population` = "genpop",
`Instructed and/or prescribed resistance training for clinical populations` = "clinpop",
`Never instructed and/or prescribed resistance training` = "none",
`Current or most recent job role` = "Q15"
) |>
gtsummary::tbl_summary(type = c(`Typical resistance training frequency (days)`) ~ "continuous",
missing_text = "Missing data")
tinytable::tt(as.data.frame(tbl$table_body))
tbl <- data |>
group_by(ResponseId) |>
slice_head(n=1) |>
left_join(q14_split, by = "ResponseId") |>
ungroup() |>
select(Q2, Q3, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, athletes, genpop, clinpop, none, Q15) |>
mutate(Q8 = as.numeric(case_when(
Q8 == "0 days per week" ~ 0,
Q8 == "1 day per week" ~ 1,
Q8 == "2 days per week" ~ 2,
Q8 == "3 days per week" ~ 3,
Q8 == "4 days per week" ~ 4,
Q8 == "5 days per week" ~ 5,
Q8 == "6 days per week" ~ 6,
Q8 == "7 days per week" ~ 7
))) |>
rename(`Biological sex` = "Q2",
`Age (years)` = "Q3",
`Highest level of education` = "Q6",
`University-level qualification in a field related to exercise, physical activity, or sport?` = "Q7",
`Typical resistance training frequency (days)` = "Q8",
`Resistance training experience (years)` = "Q9",
`Participated in a weightlifting, powerlifting, or strongman competition?` = "Q10",
`Participated in a bodybuilding competition or other physique-based competition?` = "Q11",
`Ever employed in a job involving instruction and/or prescription of resistance training` = "Q12",
`Holds a certification/license qualifying instruction and/or prescription of resistance training` = "Q13",
`Instructed and/or prescribed resistance training for athletes` = "athletes",
`Instructed and/or prescribed resistance training for the general population` = "genpop",
`Instructed and/or prescribed resistance training for clinical populations` = "clinpop",
`Never instructed and/or prescribed resistance training` = "none",
`Current or most recent job role` = "Q15"
) |>
gtsummary::tbl_summary(type = c(`Typical resistance training frequency (days)`) ~ "continuous",
missing_text = "Missing data")
summary_tbl <- as.data.frame(tbl$table_body) %>%
mutate(Characteristic = label,
Summary = stat_0) %>%
select(Characteristic, Summary)
summary_tbl
tbl <- data |>
group_by(ResponseId) |>
slice_head(n=1) |>
left_join(q14_split, by = "ResponseId") |>
ungroup() |>
select(Q2, Q3, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, athletes, genpop, clinpop, none, Q15) |>
mutate(Q8 = as.numeric(case_when(
Q8 == "0 days per week" ~ 0,
Q8 == "1 day per week" ~ 1,
Q8 == "2 days per week" ~ 2,
Q8 == "3 days per week" ~ 3,
Q8 == "4 days per week" ~ 4,
Q8 == "5 days per week" ~ 5,
Q8 == "6 days per week" ~ 6,
Q8 == "7 days per week" ~ 7
))) |>
rename(`Biological sex` = "Q2",
`Age (years)` = "Q3",
`Highest level of education` = "Q6",
`University-level qualification in a field related to exercise, physical activity, or sport?` = "Q7",
`Typical resistance training frequency (days)` = "Q8",
`Resistance training experience (years)` = "Q9",
`Participated in a weightlifting, powerlifting, or strongman competition?` = "Q10",
`Participated in a bodybuilding competition or other physique-based competition?` = "Q11",
`Ever employed in a job involving instruction and/or prescription of resistance training` = "Q12",
`Holds a certification/license qualifying instruction and/or prescription of resistance training` = "Q13",
`Instructed and/or prescribed resistance training for athletes` = "athletes",
`Instructed and/or prescribed resistance training for the general population` = "genpop",
`Instructed and/or prescribed resistance training for clinical populations` = "clinpop",
`Never instructed and/or prescribed resistance training` = "none",
`Current or most recent job role` = "Q15"
) |>
gtsummary::tbl_summary(type = c(`Typical resistance training frequency (days)`) ~ "continuous",
missing = "no")
tbl
summary_tbl <- as.data.frame(tbl$table_body) %>%
mutate(Characteristic = label,
Summary = stat_0) %>%
select(Characteristic, Summary) %>%
filter(Characteristic != "Unknown")
summary_tbl
View(summary_tbl)
install.packages("gglikert")
install.packages("ggstats")
data |>
group_by(ResponseId) |>
slice_head(n=1) |>
select(Q68_1,Q68_2,Q68_3,Q68_4,Q68_5) |>
ggstats::gglikert()
data |>
group_by(ResponseId) |>
slice_head(n=1) |>
select(Q68_1,Q68_2,Q68_3,Q68_4,Q68_5) |>
mutate(across(everything(), ~ factor(.x, levels = c(
"Strongly disagree",
"Disagree",
"Neutral",
"Agree",
"Strongly agree"
))))
data |>
group_by(ResponseId) |>
slice_head(n=1) |>
select(Q68_1,Q68_2,Q68_3,Q68_4,Q68_5) |>
mutate(across(everything(), ~ factor(.x, levels = c(
"Strongly disagree",
"Disagree",
"Neutral",
"Agree",
"Strongly agree"
)))) |>
ggstats::gglikert()
likert_levels <- c(
"Strongly disagree",
"Disagree",
"Neither agree nor disagree",
"Agree",
"Strongly agree"
)
set.seed(42)
df <-
tibble(
q1 = sample(likert_levels, 150, replace = TRUE),
q2 = sample(likert_levels, 150, replace = TRUE, prob = 5:1),
q3 = sample(likert_levels, 150, replace = TRUE, prob = 1:5),
q4 = sample(likert_levels, 150, replace = TRUE, prob = 1:5),
q5 = sample(c(likert_levels, NA), 150, replace = TRUE),
q6 = sample(likert_levels, 150, replace = TRUE, prob = c(1, 0, 1, 1, 0))
) |>
mutate(across(everything(), ~ factor(.x, levels = likert_levels)))
df
ggstats::gglikert(df)
data |>
group_by(ResponseId) |>
slice_head(n=1) |>
ungroup() |>
select(Q68_1,Q68_2,Q68_3,Q68_4,Q68_5) |>
mutate(across(everything(), ~ factor(.x, levels = c(
"Strongly disagree",
"Disagree",
"Neutral",
"Agree",
"Strongly agree"
)))) |>
ggstats::gglikert()
data |>
group_by(ResponseId) |>
slice_head(n=1) |>
ungroup() |>
select(Q68_1,Q68_2,Q68_3,Q68_4,Q68_5) |>
rename(
"Exercise names are important" = Q68_1,
"Exercises are named inconsistently" =  Q68_2,
"Exercise names impact how information about exercise is learned" = Q68_3,
"I sometimes call the same exercise by different names" = Q68_4,
"A system that standardizes exercise names would be beneficial" = Q68_5
)
data |>
group_by(ResponseId) |>
slice_head(n=1) |>
ungroup() |>
select(Q68_1,Q68_2,Q68_3,Q68_4,Q68_5) |>
rename(
"Exercise names are important" = Q68_1,
"Exercises are named inconsistently" =  Q68_2,
"Exercise names impact how information about exercise is learned" = Q68_3,
"I sometimes call the same exercise by different names" = Q68_4,
"A system that standardizes exercise names would be beneficial" = Q68_5
) |>
mutate(across(everything(), ~ factor(.x, levels = c(
"Strongly disagree",
"Disagree",
"Neutral",
"Agree",
"Strongly agree"
)))) |>
ggstats::gglikert()
data |>
group_by(ResponseId) |>
slice_head(n=1) |>
ungroup() |>
select(Q68_1,Q68_2,Q68_3,Q68_4,Q68_5) |>
rename(
"Exercise names are important" = Q68_1,
"Exercises are named inconsistently" =  Q68_2,
"Exercise names impact how information about exercise is learned" = Q68_3,
"I sometimes call the same exercise by different names" = Q68_4,
"A system that standardizes exercise names would be beneficial" = Q68_5
) |>
mutate(across(everything(), ~ factor(.x, levels = c(
"Strongly disagree",
"Disagree",
"Neutral",
"Agree",
"Strongly agree"
)))) |>
ggstats::gglikert() +
scale_y_discrete(labels = function(x) str_wrap(x, width = 25))
?ggstats::gglikert()
data |>
group_by(ResponseId) |>
slice_head(n=1) |>
ungroup() |>
select(Q68_1,Q68_2,Q68_3,Q68_4,Q68_5) |>
rename(
"Exercise names are important" = Q68_1,
"Exercises are named inconsistently" =  Q68_2,
"Exercise names impact how information about exercise is learned" = Q68_3,
"I sometimes call the same exercise by different names" = Q68_4,
"A system that standardizes exercise names would be beneficial" = Q68_5
) |>
mutate(across(everything(), ~ factor(.x, levels = c(
"Strongly disagree",
"Disagree",
"Neutral",
"Agree",
"Strongly agree"
)))) |>
ggstats::gglikert(add_totals = TRUE) +
scale_y_discrete(labels = function(x) str_wrap(x, width = 25))
data |>
group_by(ResponseId) |>
slice_head(n=1) |>
ungroup() |>
select(Q68_1,Q68_2,Q68_3,Q68_4,Q68_5) |>
rename(
"Exercise names are important" = Q68_1,
"Exercises are named inconsistently" =  Q68_2,
"Exercise names impact how information about exercise is learned" = Q68_3,
"I sometimes call the same exercise by different names" = Q68_4,
"A system that standardizes exercise names would be beneficial" = Q68_5
) |>
mutate(across(everything(), ~ factor(.x, levels = c(
"Strongly disagree",
"Disagree",
"Neutral",
"Agree",
"Strongly agree"
)))) |>
ggstats::gglikert(totals_accuracy = TRUE) +
scale_y_discrete(labels = function(x) str_wrap(x, width = 25))
body_position_words <- tokens |>
filter(recognise == "YES") |>
count(body_position, word, sort = TRUE)
# inverse exercise frequency for recognised exercises
tf_ibpf <- body_position_words |>
bind_tf_idf(word, body_position, n)
tf_ibpf_plot <- tf_ibpf |>
group_by(body_position) |>
top_n(5) |>
ggplot(aes(
x = tf_idf,
y = reorder_within(word, tf_idf, body_position)
)) +
geom_col(show.legend = FALSE) +
labs(
x = "Term Frequency - Inverse Body Position Frequency",
y = NULL,
title = "Top five words by term frequency - inverse body position frequency",
subtitle = "Measure of how important a word is for naming an exercise based on body position in the collection of exercises examined"
) +
scale_y_reordered() +
facet_wrap( ~ body_position, scales = "free") +
theme_bw()
tf_ibpf
tf_ibpf_plot
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_make()
